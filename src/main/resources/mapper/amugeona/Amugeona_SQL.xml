<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="amugeona">
	<select id="selectTypeFirstList" parameterType="hashmap" resultType="hashmap"> 
		SELECT A.TYPE_CD
		     , B.CODE_NAME
		     , B.GROUP_ID
		     , A.TYPE_CATEGORY
		     , A.PARENT_CATEGORY 
             , C.CODE_NAME AS TITLE_NAME
		  FROM TB_CATEGORYMAP A
		     , TB_COMMONCD B 
             , TB_COMMONCD C
		 WHERE A.TYPE_CD = B.CODE_ID  
           AND A.PARENT_CATEGORY = C.CODE_ID
		   AND A.PARENT_CATEGORY = 'CT001'
	</select>
	
	<select id="selectTypeList" parameterType="hashmap" resultType="hashmap">
		SELECT A.TYPE_CD
		     , B.CODE_NAME
		     , B.GROUP_ID
		     , A.TYPE_CATEGORY
		     , A.PARENT_CATEGORY 
             , C.CODE_NAME AS TITLE_NAME
		  FROM TB_CATEGORYMAP A
		     , TB_COMMONCD B 
             , TB_COMMONCD C
		 WHERE A.TYPE_CD = B.CODE_ID  
           AND A.PARENT_CATEGORY = C.CODE_ID
		   AND A.PARENT_CATEGORY = #{category}
	</select>
	
	<select id="selectFoodList" parameterType="hashmap" resultType="hashmap"> 
		SELECT B.FOOD_CD 
	  		  ,C.CODE_NAME
	  		  ,C.IMG 
	      FROM (SELECT A.FOOD_CD,
					   MAX(A.STEP01) AS STEP01,
					   MAX(A.STEP02) AS STEP02,
					   MAX(A.STEP03) AS STEP03,
					   MAX(A.STEP04) AS STEP04,
					   MAX(A.STEP05) AS STEP05,
					   MAX(A.STEP06) AS STEP06,
					   MAX(A.STEP07) AS STEP07,
					   MAX(A.STEP08) AS STEP08
				 FROM (SELECT FOOD_CD,
							  CASE WHEN FOOD_STEP_TYPE = 'CM002' THEN FOOD_TYPE 
							  ELSE '' END AS STEP01,
							  CASE WHEN FOOD_STEP_TYPE = 'CM003' THEN FOOD_TYPE 
							  ELSE '' END AS STEP02,
							  CASE WHEN FOOD_STEP_TYPE = 'CM004' THEN FOOD_TYPE 
							  ELSE '' END AS STEP03,
							  CASE WHEN FOOD_STEP_TYPE = 'CM005' THEN FOOD_TYPE 
							  ELSE '' END AS STEP04,
							  CASE WHEN FOOD_STEP_TYPE = 'CM006' THEN FOOD_TYPE 
							  ELSE '' END AS STEP05,
							  CASE WHEN FOOD_STEP_TYPE = 'CM007' THEN FOOD_TYPE 
							  ELSE '' END AS STEP06,
							  CASE WHEN FOOD_STEP_TYPE = 'CM008' THEN FOOD_TYPE 
							  ELSE '' END AS STEP07,
							  CASE WHEN FOOD_STEP_TYPE = 'CM009' THEN FOOD_TYPE 
							  ELSE '' END AS STEP08
        				 FROM TB_FOODMAP
        		) A
          GROUP BY A.FOOD_CD) B , TB_FOODINFO C
          WHERE B.FOOD_CD = C.CODE_ID
          		AND DEL_YN = 'Y' 
		        <if test="CM002 != null">
		        	AND B.STEP01 = #{CM002}
		        </if>
		        <if test="CM003 != null">
		        	AND B.STEP02 = #{CM003}
		        </if>
		        <if test="CM004 != null">
		        	AND B.STEP03 = #{CM004}
		        </if>
		        <if test="CM005 != null">
		        	AND B.STEP04 = #{CM005}
		        </if>
		        <if test="CM006 != null">
		        	AND B.STEP05 = #{CM006}
		        </if>
		        <if test="CM007 != null">
		        	AND B.STEP06 = #{CM007}
		        </if>
		        <if test="CM008 != null">
		        	AND B.STEP07 = #{CM008}
		        </if>
		        <if test="CM009 != null">
		        	AND B.STEP08 = #{CM009}
		        </if>
		 		<if test="foodName != null">
		        	AND C.CODE_NAME = #{foodName}
		        </if>
		GROUP BY C.CODE_NAME
	</select>
	<select id="selectFoodMoreList" parameterType="hashmap" resultType="hashmap"> 
		SELECT C.CODE_NAME , MAX(C.FOOD_CD) AS FOOD_CD, MAX(C.IMG) AS IMG
		  FROM (SELECT B.CODE_NAME AS CODE_NAME 
		  			   ,A.FOOD_CD
		  			   ,COUNT(*) AS CNT 
		  			   ,B.IMG
		  		  FROM TB_FOODMAP A
		  		  	  ,TB_FOODINFO B
		  		 WHERE B.CODE_ID = A.FOOD_CD 
		  		   AND DEL_YN = 'Y' 
		  		   AND (
		  		   	   		(A.FOOD_STEP_TYPE = 'CM002'
			  		   	    <if test="CM002 != null">
			  		   	   	 	AND A.FOOD_TYPE = #{CM002}
			  		   	    </if> 
			  		   	    ) OR
			  		   	    (A.FOOD_STEP_TYPE = 'CM003'
			  		   	    <if test="CM003 != null">
			  		   	   	 	AND A.FOOD_TYPE = #{CM003}
			  		   	    </if> 
			  		   	    ) OR
			  		   	    (A.FOOD_STEP_TYPE = 'CM004'
			  		   	    <if test="CM004 != null">
			  		   	   	 	AND A.FOOD_TYPE = #{CM004}
			  		   	    </if> 
			  		   	    ) OR
			  		   	    (A.FOOD_STEP_TYPE = 'CM005'
			  		   	    <if test="CM005 != null">
			  		   	   	 	AND A.FOOD_TYPE = #{CM005}
			  		   	    </if> 
			  		   	    ) OR
			  		   	    (A.FOOD_STEP_TYPE = 'CM006'
			  		   	    <if test="CM006 != null">
			  		   	   	 	AND A.FOOD_TYPE = #{CM006}
			  		   	    </if> 
			  		   	    ) OR
			  		   	    (A.FOOD_STEP_TYPE = 'CM007'
			  		   	    <if test="CM007 != null">
			  		   	   	 	AND A.FOOD_TYPE = #{CM007}
			  		   	    </if> 
			  		   	    )
			  		 )
			GROUP BY A.FOOD_CD
			  HAVING CNT > 3
			ORDER BY CNT DESC) C
		 WHERE 1=1 
		   <if test="foodList != null">
		   AND C.CODE_NAME NOT IN
			 <foreach collection="foodList" item="item" open="(" close=")" separator=",">
			 	#{item.CODE_NAME}
			 </foreach>
		   </if>
		 GROUP BY C.CODE_NAME
	</select>

	<select id="selectFoodWorldCup" parameterType="hashmap" resultType="hashmap"> 
		SELECT CODE_ID,
			   CODE_NAME,
			   IMG
		  FROM TB_FOODINFO
		 WHERE DEL_YN = 'Y'
		   AND CODE_ID IN
		 <foreach collection="list" item="item" open="(" close=")" separator=",">
		 	#{item}
		 </foreach>
	</select>
	
	<select id="selectRandomWorldCup" resultType="hashmap"> 
		SELECT CODE_ID,
			   CODE_NAME,
			   IMG
		  FROM TB_FOODINFO
		 WHERE CODE_ID IN( SELECT MAX(CODE_ID)
		  FROM TB_FOODINFO
		 GROUP BY CODE_NAME) 
		   AND DEL_YN = 'Y'
	</select>
	
	<select id="selectFoodNm" resultType="hashmap" parameterType="hashmap"> 
		SELECT CODE_NAME
		  FROM TB_FOODINFO
		 WHERE CODE_ID = #{foodCd}
	</select>
	
	<insert id="integerLogInfo" parameterType="hashmap">
		INSERT INTO TB_LOG
			   (
			   	   LOG_IDX,
			   	   LOG_TYPE1,
			   	   LOG_TYPE2,
			   	   LOG_CONTENT,
			   	   COOKI_ID,
			   	   REG_DATE,
			   	   REG_ID,
			   	   MOD_DATE,
			   	   MOD_ID
			   ) VALUES (
			   	   #{logIdx},
			   	   #{logType1},
			   	   #{logType2},
			   	   #{logContent},
			   	   #{cookiId},
			   	   sysdate(),
			   	   'SYSTEM'
			   	   sysdate(),
			   	   'SYSTEM'
			   )
	</insert>
</mapper>

